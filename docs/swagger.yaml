basePath: /api/v1
definitions:
  domain.Article:
    description: Article entity with associated topics
    properties:
      author:
        description: Article author
        example: John Doe
        type: string
      content:
        description: Article content
        example: This is the content of the article...
        type: string
      created_at:
        description: Creation timestamp
        example: "2023-06-01T12:00:00Z"
        type: string
      id:
        description: Article unique identifier
        example: d4b8583d-5038-4838-bcd7-3d8dddfedd6a
        type: string
      status:
        allOf:
        - $ref: '#/definitions/domain.ArticleStatus'
        description: Article status
        example: published
      title:
        description: Article title
        example: 'Breaking News: Important Update'
        type: string
      topics:
        description: Full Topic objects associated with the article for responses
        items:
          $ref: '#/definitions/domain.Topic'
        type: array
      updated_at:
        description: Last update timestamp
        example: "2023-06-01T12:30:00Z"
        type: string
    type: object
  domain.ArticleStatus:
    description: Article status enum
    enum:
    - draft
    - published
    - deleted
    type: string
    x-enum-varnames:
    - StatusDraft
    - StatusPublished
    - StatusDeleted
  domain.CreateArticleRequest:
    description: Request body for creating a new article
    properties:
      author:
        description: Article author (required)
        example: John Doe
        type: string
      content:
        description: Article content (required)
        example: This is the content of the article...
        type: string
      status:
        allOf:
        - $ref: '#/definitions/domain.ArticleStatus'
        description: Article status (draft, published, or archived)
        enum:
        - draft
        - published
        - archived
        example: draft
      title:
        description: Article title (required)
        example: 'Breaking News: Important Update'
        type: string
    required:
    - author
    - content
    - title
    type: object
  domain.CreateTopicRequest:
    description: Request body for creating a new topic
    properties:
      name:
        description: Topic name (required)
        example: Technology
        type: string
    required:
    - name
    type: object
  domain.Empty:
    description: Empty response data structure
    type: object
  domain.ResponseMultipleData-domain_Article:
    properties:
      code:
        description: HTTP status code
        example: 200
        type: integer
      data:
        description: Response data array
        items:
          $ref: '#/definitions/domain.Article'
        type: array
      message:
        description: Response message
        example: Operation completed successfully
        type: string
      status:
        description: Response status
        example: success
        type: string
    type: object
  domain.ResponseMultipleData-domain_Empty:
    properties:
      code:
        description: HTTP status code
        example: 200
        type: integer
      data:
        description: Response data array
        items:
          $ref: '#/definitions/domain.Empty'
        type: array
      message:
        description: Response message
        example: Operation completed successfully
        type: string
      status:
        description: Response status
        example: success
        type: string
    type: object
  domain.ResponseMultipleData-domain_Topic:
    properties:
      code:
        description: HTTP status code
        example: 200
        type: integer
      data:
        description: Response data array
        items:
          $ref: '#/definitions/domain.Topic'
        type: array
      message:
        description: Response message
        example: Operation completed successfully
        type: string
      status:
        description: Response status
        example: success
        type: string
    type: object
  domain.ResponseSingleData-domain_Article:
    properties:
      code:
        description: HTTP status code
        example: 200
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/domain.Article'
        description: Response data
      message:
        description: Response message
        example: Operation completed successfully
        type: string
      status:
        description: Response status
        example: success
        type: string
    type: object
  domain.ResponseSingleData-domain_Empty:
    properties:
      code:
        description: HTTP status code
        example: 200
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/domain.Empty'
        description: Response data
      message:
        description: Response message
        example: Operation completed successfully
        type: string
      status:
        description: Response status
        example: success
        type: string
    type: object
  domain.ResponseSingleData-domain_Topic:
    properties:
      code:
        description: HTTP status code
        example: 200
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/domain.Topic'
        description: Response data
      message:
        description: Response message
        example: Operation completed successfully
        type: string
      status:
        description: Response status
        example: success
        type: string
    type: object
  domain.Topic:
    description: Topic entity for categorizing articles
    properties:
      created_at:
        description: Creation timestamp
        example: "2023-06-01T12:00:00Z"
        type: string
      id:
        description: Topic unique identifier
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      name:
        description: Topic name
        example: Technology
        type: string
      updated_at:
        description: Last update timestamp
        example: "2023-06-01T12:30:00Z"
        type: string
    type: object
  domain.UpdateArticleRequest:
    description: Request body for updating an existing article
    properties:
      author:
        description: Article author (required)
        example: Jane Doe
        type: string
      content:
        description: Article content (required)
        example: This is the updated content...
        type: string
      status:
        allOf:
        - $ref: '#/definitions/domain.ArticleStatus'
        description: Article status (draft, published, or archived)
        enum:
        - draft
        - published
        - archived
        example: published
      title:
        description: Article title (required)
        example: Updated Breaking News
        type: string
    required:
    - author
    - content
    - title
    type: object
  domain.UpdateTopicRequest:
    description: Request body for updating an existing topic
    properties:
      name:
        description: Topic name (required)
        example: Updated Technology
        type: string
    required:
    - name
    type: object
host: localhost:8080
info:
  contact: {}
  description: Example Go API using Zero One Group's monorepo template
  title: Zero One Group News
  version: "1.0"
paths:
  /articles:
    get:
      consumes:
      - application/json
      description: Get a paginated list of articles with optional filtering by search,
        status, and topic
      parameters:
      - description: Search in title and content
        in: query
        name: search
        type: string
      - description: Filter by status
        enum:
        - draft
        - published
        - archived
        in: query
        name: status
        type: string
      - description: Filter by topic name
        in: query
        name: topic
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved articles list
          schema:
            $ref: '#/definitions/domain.ResponseMultipleData-domain_Article'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ResponseMultipleData-domain_Empty'
      summary: Get articles list
      tags:
      - articles
    post:
      consumes:
      - application/json
      description: Create a new article with the provided information
      parameters:
      - description: Article creation data
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/domain.CreateArticleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Article successfully created
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Article'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
      summary: Create new article
      tags:
      - articles
  /articles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an article by its unique identifier (soft delete)
      parameters:
      - description: Article ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Article successfully deleted
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "400":
          description: Invalid article ID format
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "404":
          description: Article not found
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
      summary: Delete article
      tags:
      - articles
    get:
      consumes:
      - application/json
      description: Get a single article by its unique identifier
      parameters:
      - description: Article ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved article
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Article'
        "400":
          description: Invalid article ID format
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "404":
          description: Article not found
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
      summary: Get article by ID
      tags:
      - articles
    put:
      consumes:
      - application/json
      description: Update an existing article by ID with new information
      parameters:
      - description: Article ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Article update data
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateArticleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Article successfully updated
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Article'
        "400":
          description: Invalid request payload or article ID
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
      summary: Update article
      tags:
      - articles
  /articles/{id}/topics:
    get:
      consumes:
      - application/json
      description: Get all topics associated with a specific article
      parameters:
      - description: Article ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved topics for article
          schema:
            $ref: '#/definitions/domain.ResponseMultipleData-domain_Topic'
        "400":
          description: Invalid article ID format
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
      summary: Get article topics
      tags:
      - articles
  /articles/{id}/topics/{topic_id}:
    delete:
      consumes:
      - application/json
      description: Disassociate a topic from an article
      parameters:
      - description: Article ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Topic ID
        format: uuid
        in: path
        name: topic_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Topic successfully removed from article
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "400":
          description: Invalid article ID or topic ID
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "404":
          description: Article not found
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
      summary: Remove topic from article
      tags:
      - articles
    post:
      consumes:
      - application/json
      description: Associate a topic with an article
      parameters:
      - description: Article ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Topic ID
        format: uuid
        in: path
        name: topic_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Topic successfully added to article
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Article'
        "400":
          description: Invalid article ID or topic ID
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "404":
          description: Article not found
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
      summary: Add topic to article
      tags:
      - articles
  /topics:
    get:
      consumes:
      - application/json
      description: Get a list of all topics with optional search filtering
      parameters:
      - description: Search in topic name
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved topics list
          schema:
            $ref: '#/definitions/domain.ResponseMultipleData-domain_Topic'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ResponseMultipleData-domain_Empty'
      summary: Get topics list
      tags:
      - topics
    post:
      consumes:
      - application/json
      description: Create a new topic with the provided information
      parameters:
      - description: Topic creation data
        in: body
        name: topic
        required: true
        schema:
          $ref: '#/definitions/domain.CreateTopicRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Topic successfully created
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Topic'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
      summary: Create new topic
      tags:
      - topics
  /topics/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a topic by its unique identifier (soft delete)
      parameters:
      - description: Topic ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Topic successfully deleted
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "400":
          description: Invalid topic ID format
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "404":
          description: Topic not found
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
      summary: Delete topic
      tags:
      - topics
    get:
      consumes:
      - application/json
      description: Get a single topic by its unique identifier
      parameters:
      - description: Topic ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved topic
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Topic'
        "400":
          description: Invalid topic ID format
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "404":
          description: Topic not found
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
      summary: Get topic by ID
      tags:
      - topics
    put:
      consumes:
      - application/json
      description: Update an existing topic by ID with new information
      parameters:
      - description: Topic ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Topic update data
        in: body
        name: topic
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateTopicRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Topic successfully updated
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Topic'
        "400":
          description: Invalid request payload or topic ID
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
      summary: Update topic
      tags:
      - topics
  /topics/{id}/articles:
    get:
      consumes:
      - application/json
      description: Get all articles associated with a specific topic
      parameters:
      - description: Topic ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved articles for topic
          schema:
            $ref: '#/definitions/domain.ResponseMultipleData-domain_Article'
        "400":
          description: Invalid topic ID format
          schema:
            $ref: '#/definitions/domain.ResponseSingleData-domain_Empty'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.ResponseMultipleData-domain_Empty'
      summary: Get topic articles
      tags:
      - topics
swagger: "2.0"
